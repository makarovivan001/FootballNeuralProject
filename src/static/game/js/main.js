var ACTION_MAP = {
    change: ` <div class="change">
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 20 20" version="1.1">
                            <g id="layer1">
                            <path d="M 4 2.5 L 3 3.5 L 3 8 L 7.5 8 L 8.5 7 L 4.6601562 7 L 5.4628906 6.0722656 L 5.7695312 5.7441406 L 6.0996094 5.4414062 L 6.4492188 5.1621094 L 6.8203125 4.9101562 L 7.2089844 4.6875 L 7.6152344 4.4941406 L 8.0332031 4.3300781 L 8.4609375 4.2011719 L 8.8984375 4.1015625 L 9.3417969 4.0351562 L 9.7890625 4.0039062 L 10.238281 4.0058594 L 10.685547 4.0390625 L 11.128906 4.1054688 L 11.564453 4.2070312 L 11.994141 4.3398438 L 12.410156 4.5058594 L 12.814453 4.7011719 L 13.201172 4.9257812 L 13.572266 5.1777344 L 13.921875 5.4589844 L 14.25 5.7636719 L 14.554688 6.09375 L 14.833984 6.4453125 L 15.083984 6.8164062 L 15.310547 7.2050781 L 15.501953 7.609375 L 15.666016 8.0273438 L 15.796875 8.4550781 L 15.896484 8.8925781 L 15.962891 9.3359375 L 15.994141 9.7851562 L 15.994141 10 L 17 10 L 17 9.9902344 L 16.982422 9.5058594 L 16.931641 9.0214844 L 16.847656 8.5449219 L 16.728516 8.0742188 L 16.580078 7.6113281 L 16.398438 7.1621094 L 16.185547 6.7265625 L 15.945312 6.3046875 L 15.675781 5.9023438 L 15.376953 5.5175781 L 15.054688 5.15625 L 14.707031 4.8183594 L 14.335938 4.5058594 L 13.945312 4.2167969 L 13.535156 3.9570312 L 13.109375 3.7285156 L 12.666016 3.5273438 L 12.210938 3.3574219 L 11.746094 3.2207031 L 11.271484 3.1152344 L 10.792969 3.0449219 L 10.306641 3.0058594 L 9.8222656 3 L 9.3378906 3.0292969 L 8.8574219 3.0917969 L 8.3808594 3.1894531 L 7.9140625 3.3183594 L 7.4550781 3.4785156 L 7.0097656 3.6699219 L 6.578125 3.8925781 L 6.1640625 4.1445312 L 5.7675781 4.4238281 L 5.390625 4.7304688 L 5.0371094 5.0605469 L 4.7070312 5.4179688 L 4 6.234375 L 4 2.5 z M 3 10 L 3 10.007812 L 3.0175781 10.492188 L 3.0683594 10.976562 L 3.1523438 11.453125 L 3.2714844 11.923828 L 3.4199219 12.386719 L 3.6015625 12.835938 L 3.8144531 13.271484 L 4.0546875 13.693359 L 4.3242188 14.095703 L 4.6230469 14.480469 L 4.9453125 14.841797 L 5.2929688 15.179688 L 5.6640625 15.492188 L 6.0546875 15.78125 L 6.4648438 16.041016 L 6.890625 16.269531 L 7.3339844 16.470703 L 7.7890625 16.640625 L 8.2539062 16.777344 L 8.7285156 16.882812 L 9.2070312 16.953125 L 9.6933594 16.992188 L 10.177734 16.998047 L 10.662109 16.96875 L 11.142578 16.90625 L 11.619141 16.808594 L 12.085938 16.679688 L 12.544922 16.519531 L 12.990234 16.328125 L 13.421875 16.105469 L 13.835938 15.853516 L 14.232422 15.574219 L 14.609375 15.267578 L 14.962891 14.9375 L 15.292969 14.580078 L 16 13.763672 L 16 17.498047 L 17 16.498047 L 17 11.998047 L 12.5 11.998047 L 11.5 12.998047 L 15.339844 12.998047 L 14.537109 13.925781 L 14.230469 14.253906 L 13.900391 14.556641 L 13.550781 14.835938 L 13.179688 15.087891 L 12.791016 15.310547 L 12.384766 15.503906 L 11.966797 15.667969 L 11.539062 15.796875 L 11.101562 15.896484 L 10.658203 15.962891 L 10.210938 15.994141 L 9.7617188 15.992188 L 9.3144531 15.958984 L 8.8710938 15.892578 L 8.4355469 15.791016 L 8.0058594 15.658203 L 7.5898438 15.492188 L 7.1855469 15.296875 L 6.7988281 15.072266 L 6.4277344 14.820312 L 6.078125 14.539062 L 5.75 14.234375 L 5.4453125 13.904297 L 5.1660156 13.552734 L 4.9160156 13.181641 L 4.6894531 12.792969 L 4.4980469 12.388672 L 4.3339844 11.970703 L 4.203125 11.542969 L 4.1035156 11.105469 L 4.0371094 10.662109 L 4.0058594 10.212891 L 4.0058594 10 L 3 10 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                            </g>
                            </svg>
                        </div>`,
    yellow_card: `<div class="yellow_card_block">
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                        </div>`,
    red_card: `<div class="red_card_block">
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                        </div>`,
    yellow_red_card: `<div class="yellow_red_card_block">
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                        </div>`,
    goal: `<div class="goal">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" version="1.1" id="Capa_1" height="80%" viewBox="0 0 72.371 72.372" xml:space="preserve">
                 <g>
                  <path d="M22.57,2.648c-4.489,1.82-8.517,4.496-11.971,7.949C7.144,14.051,4.471,18.08,2.65,22.568C0.892,26.904,0,31.486,0,36.186   c0,4.699,0.892,9.281,2.65,13.615c1.821,4.489,4.495,8.518,7.949,11.971c3.454,3.455,7.481,6.129,11.971,7.949   c4.336,1.76,8.917,2.649,13.617,2.649c4.7,0,9.28-0.892,13.616-2.649c4.488-1.82,8.518-4.494,11.971-7.949   c3.455-3.453,6.129-7.48,7.949-11.971c1.758-4.334,2.648-8.916,2.648-13.615c0-4.7-0.891-9.282-2.648-13.618   c-1.82-4.488-4.496-8.518-7.949-11.971s-7.479-6.129-11.971-7.949C45.467,0.891,40.887,0,36.187,0   C31.487,0,26.906,0.891,22.57,2.648z M9.044,51.419c-1.743-1.094-3.349-2.354-4.771-3.838c-2.172-6.112-2.54-12.729-1.101-19.01   c0.677-1.335,1.447-2.617,2.318-3.845c0.269-0.379,0.518-0.774,0.806-1.142l8.166,4.832c0,0.064,0,0.134,0,0.205   c-0.021,4.392,0.425,8.752,1.313,13.049c0.003,0.02,0.006,0.031,0.01,0.049l-6.333,9.93C9.314,51.579,9.177,51.503,9.044,51.419z    M33.324,68.206c1.409,0.719,2.858,1.326,4.347,1.82c-6.325,0.275-12.713-1.207-18.36-4.447L33,68.018   C33.105,68.085,33.212,68.149,33.324,68.206z M33.274,65.735L17.12,62.856c-1.89-2.295-3.59-4.723-5.051-7.318   c-0.372-0.66-0.787-1.301-1.102-1.99l6.327-9.92c0.14,0.035,0.296,0.072,0.473,0.119c3.958,1.059,7.986,1.812,12.042,2.402   c0.237,0.033,0.435,0.062,0.604,0.08l7.584,13.113c-1.316,1.85-2.647,3.69-4.007,5.51C33.764,65.155,33.524,65.446,33.274,65.735z    M60.15,60.149c-1.286,1.287-2.651,2.447-4.08,3.481c-0.237-1.894-0.646-3.75-1.223-5.563l8.092-15.096   c2.229-1.015,4.379-2.166,6.375-3.593c0.261-0.185,0.478-0.392,0.646-0.618C69.374,46.561,66.104,54.196,60.15,60.149z    M59.791,40.571c0.301,0.574,0.598,1.154,0.896,1.742l-7.816,14.58c-0.045,0.01-0.088,0.02-0.133,0.026   c-4.225,0.789-8.484,1.209-12.779,1.229l-7.8-13.487c1.214-2.254,2.417-4.517,3.61-6.781c0.81-1.536,1.606-3.082,2.401-4.627   l16.143-1.658C56.29,34.495,58.163,37.457,59.791,40.571z M56.516,23.277c-0.766,2.023-1.586,4.025-2.401,6.031l-15.726,1.615   c-0.188-0.248-0.383-0.492-0.588-0.725c-1.857-2.103-3.726-4.193-5.592-6.289c0.017-0.021,0.034-0.037,0.051-0.056   c-0.753-0.752-1.508-1.504-2.261-2.258l4.378-13.181c0.302-0.08,0.606-0.147,0.913-0.18c2.38-0.242,4.763-0.516,7.149-0.654   c1.461-0.082,2.93-0.129,4.416-0.024l10.832,12.209C57.314,20.943,56.95,22.124,56.516,23.277z M60.15,12.221   c2.988,2.99,5.302,6.402,6.938,10.047c-2.024-1.393-4.188-2.539-6.463-3.473c-0.354-0.146-0.717-0.275-1.086-0.402L48.877,6.376   c0.074-0.519,0.113-1.039,0.129-1.563C53.062,6.464,56.864,8.936,60.15,12.221z M25.334,4.182c0.042,0.031,0.062,0.057,0.086,0.064   c2.437,0.842,4.654,2.082,6.744,3.553l-4.09,12.317c-0.021,0.006-0.041,0.012-0.061,0.021c-0.837,0.346-1.69,0.656-2.514,1.031   c-3.395,1.543-6.705,3.252-9.823,5.301l-8.071-4.775c0.012-0.252,0.055-0.508,0.141-0.736c0.542-1.444,1.075-2.896,1.688-4.311   c0.472-1.09,1.01-2.143,1.597-3.172c0.384-0.424,0.782-0.844,1.192-1.254c3.833-3.832,8.363-6.553,13.186-8.162   C25.384,4.098,25.358,4.139,25.334,4.182z"/>
                 </g>
              </svg>
          </div>`,
    missed_penalty: `<div class="missed_penalty">
                        <svg height="90%" viewBox="0 0 300 200" xmlns="http://www.w3.org/2000/svg">
                          <rect width="100%" height="100%" fill="#555"/>
                          <rect x="10" y="10" width="280" height="180" fill="none" stroke="white" stroke-width="8"/>
                          <defs>
                            <pattern id="net" width="10" height="10" patternUnits="userSpaceOnUse">
                              <path d="M0 0 L10 0 L10 10 L0 10 Z" fill="none" stroke="#ccc" stroke-width="0.5"/>
                            </pattern>
                          </defs>
                          <rect x="10" y="10" width="280" height="180" fill="url(#net)"/>
                          <text x="150" y="125" font-size="120" text-anchor="middle" fill="red" font-family="Arial" font-weight="bold">
                            11 м
                          </text>
                        </svg>
                     </div>`,
    //    injury: `<div class="injury_block">
    //        <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 1024 1024"
    //            class="icon" version="1.1">
    //            <path d="M731.5 870.1c-34.6 0-69.2-13.2-95.6-39.5L499.7 694.3l191.2-191.2 136.2 136.2c25.4 25.4 39.4 59.4 39.4 95.6s-14 70.2-39.4 95.6c-26.4 26.4-61 39.6-95.6 39.6zM520.9 694.3l125.6 125.6c46.9 46.9 123.1 46.9 170 0 22.6-22.6 35.1-52.8 35.1-85s-12.4-62.4-35.1-85L690.9 524.3l-170 170zM329.7 524.3L193.4 388.1C168 362.6 154 328.7 154 292.5s14-70.2 39.4-95.6 59.4-39.4 95.6-39.4 70.2 14 95.6 39.4l136.2 136.2-191.1 191.2z m-40.7-352c-30.8 0-61.6 11.7-85 35.1-46.9 46.9-46.9 123.1 0 170L329.6 503l170-170L374 207.5c-23.4-23.4-54.2-35.2-85-35.2z" fill="#999999"/><path d="M352.96 519.352l161.713-161.714 151.108 151.107L504.067 670.46z" fill="#F9C0C0"/><path d="M289.2 873c-34.1 0-66.2-13.2-90.2-37.2l-10.9-10.9c-49.7-49.7-49.7-130.6 0-180.3l453.3-453.3c24-24 56-37.2 90.2-37.2s66.2 13.2 90.2 37.2l10.9 10.9c24 24 37.2 56 37.2 90.2s-13.2 66.2-37.2 90.2L379.4 835.8c-24 24-56 37.2-90.2 37.2z m442.5-703.9c-30.1 0-58.4 11.6-79.5 32.8L198.8 655.2c-43.9 43.9-43.9 115.2 0 159.1l10.9 10.9c21.2 21.2 49.4 32.8 79.5 32.8s58.4-11.7 79.5-32.8L822 371.9c21.2-21.2 32.8-49.4 32.8-79.5S843.1 234 822 212.9L811.1 202c-21-21.3-49.3-32.9-79.4-32.9z" fill="#CE0202"/><path d="M502.063946 427.935843a12.8 12.8 0 1 0 4.101338-25.26933 12.8 12.8 0 1 0-4.101338 25.26933Z" fill="#FFFFFF"/><path d="M504.1 432.1c-4.3 0-8.6-1.6-11.9-4.9-6.5-6.5-6.5-17.2 0-23.7 3.2-3.2 7.4-4.9 11.9-4.9s8.7 1.7 11.9 4.9c6.5 6.5 6.5 17.2 0 23.7-3.4 3.2-7.6 4.9-11.9 4.9z m0-25.5c-2.3 0-4.5 0.9-6.2 2.6-3.4 3.4-3.4 9 0 12.4s9 3.4 12.4 0c3.4-3.4 3.4-9 0-12.4-1.7-1.7-3.9-2.6-6.2-2.6z" fill="#999999"/><path d="M556.4 467.6m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M556.4 484.4c-4.3 0-8.6-1.6-11.9-4.9-6.5-6.5-6.5-17.2 0-23.7s17.2-6.5 23.7 0 6.5 17.2 0 23.7c-3.3 3.2-7.6 4.9-11.8 4.9z m0-25.5c-2.2 0-4.5 0.9-6.2 2.6-3.4 3.4-3.4 9 0 12.4s9 3.4 12.4 0 3.4-9 0-12.4c-1.8-1.8-4-2.6-6.2-2.6z" fill="#999999"/><path d="M608.6 519.9m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M608.6 536.7c-4.3 0-8.6-1.6-11.9-4.9-3.2-3.2-4.9-7.4-4.9-11.9s1.7-8.7 4.9-11.9c3.2-3.2 7.4-4.9 11.9-4.9s8.7 1.7 11.9 4.9c3.2 3.2 4.9 7.4 4.9 11.9s-1.7 8.7-4.9 11.9c-3.3 3.2-7.6 4.9-11.9 4.9z m0-25.6c-2.3 0-4.5 0.9-6.2 2.6s-2.6 3.9-2.6 6.2 0.9 4.5 2.6 6.2c3.4 3.4 9 3.4 12.4 0 1.7-1.7 2.6-3.9 2.6-6.2s-0.9-4.5-2.6-6.2c-1.6-1.6-3.8-2.6-6.2-2.6z" fill="#999999"/><path d="M458.2 461.2m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M458.2 478c-4.3 0-8.6-1.6-11.9-4.9-3.2-3.2-4.9-7.4-4.9-11.9s1.7-8.7 4.9-11.9c6.5-6.5 17.2-6.5 23.7 0 3.2 3.2 4.9 7.4 4.9 11.9s-1.7 8.7-4.9 11.9c-3.3 3.2-7.5 4.9-11.8 4.9z m0-25.5c-2.2 0-4.5 0.9-6.2 2.6s-2.6 3.9-2.6 6.2c0 2.3 0.9 4.5 2.6 6.2 3.4 3.4 9 3.4 12.4 0 1.7-1.7 2.6-3.9 2.6-6.2 0-2.3-0.9-4.5-2.6-6.2-1.8-1.8-4-2.6-6.2-2.6z" fill="#999999"/><path d="M510.5 513.5m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M510.5 530.3c-4.5 0-8.7-1.7-11.9-4.9-3.2-3.2-4.9-7.4-4.9-11.9s1.7-8.7 4.9-11.9c6.5-6.5 17.2-6.5 23.7 0 3.2 3.2 4.9 7.4 4.9 11.9s-1.7 8.7-4.9 11.9c-3.2 3.1-7.4 4.9-11.8 4.9z m0-25.5c-2.2 0-4.5 0.9-6.2 2.6s-2.6 3.9-2.6 6.2 0.9 4.5 2.6 6.2 3.9 2.6 6.2 2.6c2.3 0 4.5-0.9 6.2-2.6 1.7-1.7 2.6-3.9 2.6-6.2s-0.9-4.5-2.6-6.2c-1.8-1.8-4-2.6-6.2-2.6z" fill="#999999"/><path d="M562.7 565.8m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M562.7 582.6c-4.3 0-8.6-1.6-11.9-4.9-6.5-6.5-6.5-17.2 0-23.7s17.2-6.5 23.7 0 6.5 17.2 0 23.7c-3.2 3.2-7.5 4.9-11.8 4.9z m0-25.6c-2.2 0-4.5 0.9-6.2 2.6-3.4 3.4-3.4 9 0 12.4s9 3.4 12.4 0 3.4-9 0-12.4c-1.7-1.7-3.9-2.6-6.2-2.6z" fill="#999999"/><path d="M412.3 507.1m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M412.3 523.9c-4.5 0-8.7-1.7-11.9-4.9-3.2-3.2-4.9-7.4-4.9-11.9s1.7-8.7 4.9-11.9c3.2-3.2 7.4-4.9 11.9-4.9s8.7 1.7 11.9 4.9c6.5 6.5 6.5 17.2 0 23.7-3.3 3.2-7.5 5-11.9 5z m0-25.5c-2.3 0-4.5 0.9-6.2 2.6s-2.6 3.9-2.6 6.2c0 2.3 0.9 4.5 2.6 6.2s3.9 2.6 6.2 2.6c2.3 0 4.5-0.9 6.2-2.6 3.4-3.4 3.4-9 0-12.4-1.7-1.7-3.9-2.6-6.2-2.6z" fill="#999999"/><path d="M464.6 559.4m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M464.6 576.2c-4.5 0-8.7-1.7-11.9-4.9-3.2-3.2-4.9-7.4-4.9-11.9s1.7-8.7 4.9-11.9c3.2-3.2 7.4-4.9 11.9-4.9s8.7 1.7 11.9 4.9c3.2 3.2 4.9 7.4 4.9 11.9s-1.7 8.7-4.9 11.9c-3.3 3.1-7.5 4.9-11.9 4.9z m0-25.6c-2.3 0-4.5 0.9-6.2 2.6-1.7 1.7-2.6 3.9-2.6 6.2s0.9 4.5 2.6 6.2 3.9 2.6 6.2 2.6c2.3 0 4.5-0.9 6.2-2.6 1.7-1.7 2.6-3.9 2.6-6.2s-0.9-4.5-2.6-6.2c-1.7-1.6-3.9-2.6-6.2-2.6z" fill="#999999"/><path d="M516.8 611.7m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z" fill="#FFFFFF"/><path d="M516.8 628.5c-4.3 0-8.6-1.6-11.9-4.9-6.5-6.5-6.5-17.2 0-23.7 3.2-3.2 7.4-4.9 11.9-4.9s8.7 1.7 11.9 4.9c6.5 6.5 6.5 17.2 0 23.7-3.3 3.2-7.6 4.9-11.9 4.9z m0-25.6c-2.3 0-4.5 0.9-6.2 2.6-3.4 3.4-3.4 9 0 12.4 3.4 3.4 9 3.4 12.4 0s3.4-9 0-12.4c-1.6-1.6-3.8-2.6-6.2-2.6z" fill="#999999"/><path d="M339.01 535.543l5.656-5.657 152.168 152.168-5.657 5.657zM523.102 348.24l5.657-5.656 152.168 152.168-5.657 5.657z" fill="#999999"/>
    //         </svg>
    //    </div>`,
}
var PLAYER_GAME_STATISTIC_MAP = {}

var leftFormation = []
var rightFormation =  []
function show_game_info(data) {
    PLAYER_GAME_STATISTIC_MAP = data.player_game_statistic;
    let game = data.game;
    let home_team_block = document.querySelector(".home-team");
    home_team_block.dataset.id = game.home_club.id;
    let away_team_block = document.querySelector(".away-team");
    away_team_block.dataset.id = game.away_club.id;
    hide_fields(game.is_finished);
    home_team_block.querySelector('img').src = game.home_club.photo_url;
    away_team_block.querySelector('img').src = game.away_club.photo_url;

    document.querySelector('.first_team_block img').src = game.home_club.photo_url;
    document.querySelector('.second_team_block img').src = game.away_club.photo_url;

    document.querySelector('.first_team_block').dataset.id = game.home_club.id;
    document.querySelector('.second_team_block').dataset.id = game.away_club.id;

    home_team_block.querySelector('span').innerText = game.home_club.name;
    away_team_block.querySelector('span').innerText = game.away_club.name;

    let vs_block = document.querySelector(".vs");
    vs_block.querySelector('h4').innerText = `${game.home_score} - ${game.away_score}`;
    vs_block.querySelector('p').innerText = game.game_date.split("T")[0];

    for (let i = 1; i < game.home_club_placement.length; i++)
    {
        leftFormation.push(game.home_club_placement[i].length)
    }

    for (let i = 1; i < game.away_club_placement.length; i++)
    {
        rightFormation.push(game.away_club_placement[i].length)
    }

    rightFormation.reverse();
    console.log(data);
    updateFormation(game.home_club_placement, game.away_club_placement);
    show_players(data);
    if (game.is_finished) {
        show_history(data.histories);
        show_statistics(data);
    }
    else {
        drag_and_drop_init();
    }

}

function show_history(histories) {
    let timeline_block = document.querySelector(".timeline_block");
    timeline_block.innerHTML = "";

    let history_text = "";
    let home_score = 0;
    let away_score = 0;

    history_text += `<h4>Ход матча</h4>`;

    for (let i = 0; i < histories.length; i++) {
        let history = histories[i];
        let action = '';
        let goal = '';
        let player_in = '';
        let player_out = '';

        if (history.action.name === "Goal") {
            if (history.is_home) home_score += 1;
            else away_score += 1;

            goal = `<h5>${home_score} - ${away_score}</h5>`;
            action = ACTION_MAP.goal;
        }
        else if (history.action.name === "Yellow") {
            action = ACTION_MAP.yellow_card;
        }
        else if (history.action.name === "Red") {
            action = ACTION_MAP.red_card;
        }
        else if (history.action.name === "YellowRed") {
            action = ACTION_MAP.yellow_red_card;
        }
        else if (history.action.name === "MissedPenalty") {
            action = ACTION_MAP.missed_penalty;
        }

        else if (history.action.name === "Substitution") {
            player_out = `<span class="event_player player_out">${history.swap[1].name} ${history.swap[1].surname}</span>`;
            player_in = `<span class="event_player player_in">${history.swap[0].name} ${history.swap[0].surname}</span>`;
            action = ACTION_MAP.change;
        }

        if (history.player) {
            player_in = `<span class="event_player player_in">${history.player.name} ${history.player.surname}</span>`;
        }

        if (history.is_home) {
            history_text += `<div class="event_row first_club">
                <div class="game_event">
                    <span class="event_time">${history.minutes}'</span>
                    ${action}
                    ${goal}
                    <div class="verticalLine line_left"></div>
                    ${player_in}
                    ${player_out}
                </div>
            </div>`;
        } else {
            history_text += `<div class="event_row second_club">
                <div class="game_event">
                    ${player_out}
                    ${player_in}
                    <div class="verticalLine line_right"></div>
                    ${goal}
                    ${action}
                    <span class="event_time">${history.minutes}'</span>
                </div>
            </div>`;
        }
    }

    history_text += `<h4>Матч завершён ${home_score} - ${away_score}</h4>`;
    timeline_block.insertAdjacentHTML('beforeend', history_text);
}


function show_players(data) {
    let game_home_players = data.game.home_players;
    let game_away_players = data.game.away_players;

    let team_list_1_players = document.querySelector(".team-list-1");
    let team_list_2_players = document.querySelector(".team-list-2");

    let home_players_text = "";
    let away_players_text = "";


    for (let i = 0; i < game_home_players.length; i++) {
        let home_player = game_home_players[i];
        let actionsHTML = "";

        if (home_player.actions && home_player.actions.length > 0) {
            for (let j = 0; j < home_player.actions.length; j++) {
                let action = home_player.actions[j];
                let iconSVG = "";

                if (action.action && action.action.name) {
                    switch (action.action.name) {
                        case "Yellow":
                            iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                            break;
                        case "YellowRed":
                            iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                            break;
                        case "Red":
                            iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                            break;
                        case "Goal":
                            iconSVG = ` <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" version="1.1" id="Capa_1" height="80%" viewBox="0 0 72.371 72.372" xml:space="preserve">
                             <g>
	                          <path d="M22.57,2.648c-4.489,1.82-8.517,4.496-11.971,7.949C7.144,14.051,4.471,18.08,2.65,22.568C0.892,26.904,0,31.486,0,36.186   c0,4.699,0.892,9.281,2.65,13.615c1.821,4.489,4.495,8.518,7.949,11.971c3.454,3.455,7.481,6.129,11.971,7.949   c4.336,1.76,8.917,2.649,13.617,2.649c4.7,0,9.28-0.892,13.616-2.649c4.488-1.82,8.518-4.494,11.971-7.949   c3.455-3.453,6.129-7.48,7.949-11.971c1.758-4.334,2.648-8.916,2.648-13.615c0-4.7-0.891-9.282-2.648-13.618   c-1.82-4.488-4.496-8.518-7.949-11.971s-7.479-6.129-11.971-7.949C45.467,0.891,40.887,0,36.187,0   C31.487,0,26.906,0.891,22.57,2.648z M9.044,51.419c-1.743-1.094-3.349-2.354-4.771-3.838c-2.172-6.112-2.54-12.729-1.101-19.01   c0.677-1.335,1.447-2.617,2.318-3.845c0.269-0.379,0.518-0.774,0.806-1.142l8.166,4.832c0,0.064,0,0.134,0,0.205   c-0.021,4.392,0.425,8.752,1.313,13.049c0.003,0.02,0.006,0.031,0.01,0.049l-6.333,9.93C9.314,51.579,9.177,51.503,9.044,51.419z    M33.324,68.206c1.409,0.719,2.858,1.326,4.347,1.82c-6.325,0.275-12.713-1.207-18.36-4.447L33,68.018   C33.105,68.085,33.212,68.149,33.324,68.206z M33.274,65.735L17.12,62.856c-1.89-2.295-3.59-4.723-5.051-7.318   c-0.372-0.66-0.787-1.301-1.102-1.99l6.327-9.92c0.14,0.035,0.296,0.072,0.473,0.119c3.958,1.059,7.986,1.812,12.042,2.402   c0.237,0.033,0.435,0.062,0.604,0.08l7.584,13.113c-1.316,1.85-2.647,3.69-4.007,5.51C33.764,65.155,33.524,65.446,33.274,65.735z    M60.15,60.149c-1.286,1.287-2.651,2.447-4.08,3.481c-0.237-1.894-0.646-3.75-1.223-5.563l8.092-15.096   c2.229-1.015,4.379-2.166,6.375-3.593c0.261-0.185,0.478-0.392,0.646-0.618C69.374,46.561,66.104,54.196,60.15,60.149z    M59.791,40.571c0.301,0.574,0.598,1.154,0.896,1.742l-7.816,14.58c-0.045,0.01-0.088,0.02-0.133,0.026   c-4.225,0.789-8.484,1.209-12.779,1.229l-7.8-13.487c1.214-2.254,2.417-4.517,3.61-6.781c0.81-1.536,1.606-3.082,2.401-4.627   l16.143-1.658C56.29,34.495,58.163,37.457,59.791,40.571z M56.516,23.277c-0.766,2.023-1.586,4.025-2.401,6.031l-15.726,1.615   c-0.188-0.248-0.383-0.492-0.588-0.725c-1.857-2.103-3.726-4.193-5.592-6.289c0.017-0.021,0.034-0.037,0.051-0.056   c-0.753-0.752-1.508-1.504-2.261-2.258l4.378-13.181c0.302-0.08,0.606-0.147,0.913-0.18c2.38-0.242,4.763-0.516,7.149-0.654   c1.461-0.082,2.93-0.129,4.416-0.024l10.832,12.209C57.314,20.943,56.95,22.124,56.516,23.277z M60.15,12.221   c2.988,2.99,5.302,6.402,6.938,10.047c-2.024-1.393-4.188-2.539-6.463-3.473c-0.354-0.146-0.717-0.275-1.086-0.402L48.877,6.376   c0.074-0.519,0.113-1.039,0.129-1.563C53.062,6.464,56.864,8.936,60.15,12.221z M25.334,4.182c0.042,0.031,0.062,0.057,0.086,0.064   c2.437,0.842,4.654,2.082,6.744,3.553l-4.09,12.317c-0.021,0.006-0.041,0.012-0.061,0.021c-0.837,0.346-1.69,0.656-2.514,1.031   c-3.395,1.543-6.705,3.252-9.823,5.301l-8.071-4.775c0.012-0.252,0.055-0.508,0.141-0.736c0.542-1.444,1.075-2.896,1.688-4.311   c0.472-1.09,1.01-2.143,1.597-3.172c0.384-0.424,0.782-0.844,1.192-1.254c3.833-3.832,8.363-6.553,13.186-8.162   C25.384,4.098,25.358,4.139,25.334,4.182z"/>
                             </g>
                          </svg>`;
                            break;
                        case "Substitution":
                            iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" width="800px" height="800px" viewBox="0 0 20 20" version="1.1">
                                        <g id="layer1">
                                        <path d="M 4 2.5 L 3 3.5 L 3 8 L 7.5 8 L 8.5 7 L 4.6601562 7 L 5.4628906 6.0722656 L 5.7695312 5.7441406 L 6.0996094 5.4414062 L 6.4492188 5.1621094 L 6.8203125 4.9101562 L 7.2089844 4.6875 L 7.6152344 4.4941406 L 8.0332031 4.3300781 L 8.4609375 4.2011719 L 8.8984375 4.1015625 L 9.3417969 4.0351562 L 9.7890625 4.0039062 L 10.238281 4.0058594 L 10.685547 4.0390625 L 11.128906 4.1054688 L 11.564453 4.2070312 L 11.994141 4.3398438 L 12.410156 4.5058594 L 12.814453 4.7011719 L 13.201172 4.9257812 L 13.572266 5.1777344 L 13.921875 5.4589844 L 14.25 5.7636719 L 14.554688 6.09375 L 14.833984 6.4453125 L 15.083984 6.8164062 L 15.310547 7.2050781 L 15.501953 7.609375 L 15.666016 8.0273438 L 15.796875 8.4550781 L 15.896484 8.8925781 L 15.962891 9.3359375 L 15.994141 9.7851562 L 15.994141 10 L 17 10 L 17 9.9902344 L 16.982422 9.5058594 L 16.931641 9.0214844 L 16.847656 8.5449219 L 16.728516 8.0742188 L 16.580078 7.6113281 L 16.398438 7.1621094 L 16.185547 6.7265625 L 15.945312 6.3046875 L 15.675781 5.9023438 L 15.376953 5.5175781 L 15.054688 5.15625 L 14.707031 4.8183594 L 14.335938 4.5058594 L 13.945312 4.2167969 L 13.535156 3.9570312 L 13.109375 3.7285156 L 12.666016 3.5273438 L 12.210938 3.3574219 L 11.746094 3.2207031 L 11.271484 3.1152344 L 10.792969 3.0449219 L 10.306641 3.0058594 L 9.8222656 3 L 9.3378906 3.0292969 L 8.8574219 3.0917969 L 8.3808594 3.1894531 L 7.9140625 3.3183594 L 7.4550781 3.4785156 L 7.0097656 3.6699219 L 6.578125 3.8925781 L 6.1640625 4.1445312 L 5.7675781 4.4238281 L 5.390625 4.7304688 L 5.0371094 5.0605469 L 4.7070312 5.4179688 L 4 6.234375 L 4 2.5 z M 3 10 L 3 10.007812 L 3.0175781 10.492188 L 3.0683594 10.976562 L 3.1523438 11.453125 L 3.2714844 11.923828 L 3.4199219 12.386719 L 3.6015625 12.835938 L 3.8144531 13.271484 L 4.0546875 13.693359 L 4.3242188 14.095703 L 4.6230469 14.480469 L 4.9453125 14.841797 L 5.2929688 15.179688 L 5.6640625 15.492188 L 6.0546875 15.78125 L 6.4648438 16.041016 L 6.890625 16.269531 L 7.3339844 16.470703 L 7.7890625 16.640625 L 8.2539062 16.777344 L 8.7285156 16.882812 L 9.2070312 16.953125 L 9.6933594 16.992188 L 10.177734 16.998047 L 10.662109 16.96875 L 11.142578 16.90625 L 11.619141 16.808594 L 12.085938 16.679688 L 12.544922 16.519531 L 12.990234 16.328125 L 13.421875 16.105469 L 13.835938 15.853516 L 14.232422 15.574219 L 14.609375 15.267578 L 14.962891 14.9375 L 15.292969 14.580078 L 16 13.763672 L 16 17.498047 L 17 16.498047 L 17 11.998047 L 12.5 11.998047 L 11.5 12.998047 L 15.339844 12.998047 L 14.537109 13.925781 L 14.230469 14.253906 L 13.900391 14.556641 L 13.550781 14.835938 L 13.179688 15.087891 L 12.791016 15.310547 L 12.384766 15.503906 L 11.966797 15.667969 L 11.539062 15.796875 L 11.101562 15.896484 L 10.658203 15.962891 L 10.210938 15.994141 L 9.7617188 15.992188 L 9.3144531 15.958984 L 8.8710938 15.892578 L 8.4355469 15.791016 L 8.0058594 15.658203 L 7.5898438 15.492188 L 7.1855469 15.296875 L 6.7988281 15.072266 L 6.4277344 14.820312 L 6.078125 14.539062 L 5.75 14.234375 L 5.4453125 13.904297 L 5.1660156 13.552734 L 4.9160156 13.181641 L 4.6894531 12.792969 L 4.4980469 12.388672 L 4.3339844 11.970703 L 4.203125 11.542969 L 4.1035156 11.105469 L 4.0371094 10.662109 L 4.0058594 10.212891 L 4.0058594 10 L 3 10 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                        </g>
                                    </svg>`;
                            break;
                        case "MissedPenalty":
                            iconSVG = `<svg height="90%" viewBox="0 0 300 200" xmlns="http://www.w3.org/2000/svg">
                          <rect width="100%" height="100%" fill="#555"/>
                          <rect x="10" y="10" width="280" height="180" fill="none" stroke="white" stroke-width="8"/>
                          <defs>
                            <pattern id="net" width="10" height="10" patternUnits="userSpaceOnUse">
                              <path d="M0 0 L10 0 L10 10 L0 10 Z" fill="none" stroke="#ccc" stroke-width="0.5"/>
                            </pattern>
                          </defs>
                          <rect x="10" y="10" width="280" height="180" fill="url(#net)"/>
                          <text x="150" y="125" font-size="120" text-anchor="middle" fill="red" font-family="Arial" font-weight="bold">
                            11 м
                          </text>
                        </svg>`;
                            break;

                        default:
                            iconSVG = `<span>${action.action.name}</span>`;
                            break;
                    }

                    actionsHTML += `<div class="player-action">
                <div class="svg-block">${iconSVG}</div>
                <span>${action.minutes}’</span>
                </div>`;
                }
            }
        }

        home_players_text = `
        <div class="player-item" onclick="open_player_statistic(${home_player.id})">
    <div class="player-main">
        <img src="${home_player.photo_url}" alt="">
        <div class="player-info">
            <div class="player-data surname">${home_player.surname}</div>
            <div class="player-data name">${home_player.name}</div>
        </div>
    </div>
    <div class="player-action-info">
        ${actionsHTML}
    </div>
</div>`;

        team_list_1_players.insertAdjacentHTML('beforeend', home_players_text);
    }


    for (let i = 0; i < game_away_players.length; i++) {
        let away_player = game_away_players[i];
        let actionsHTML = "";

        if (away_player.actions && away_player.actions.length > 0) {
            for (let j = 0; j < away_player.actions.length; j++) {
                let action = away_player.actions[j];
                let iconSVG = "";

                switch (action.action.name) {
                    case "Yellow":
                        iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                        break;
                    case "Red":
                        iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                        break;
                    case "YellowRed":
                        iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#F1B31C"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" height="80%" viewBox="0 0 72 72" id="emoji"
                                 version="1.1">
                                <g id="color">
                                    <rect x="17" y="5" width="38" height="62" fill="#e61409"/>
                                </g>
                                <g id="line">
                                    <rect x="17" y="5" width="38" height="62" fill="none" stroke="#000000"
                                          stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                </g>
                            </svg>`;
                        break;


                    case "Goal":
                        iconSVG = ` <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" version="1.1" id="Capa_1" width="800px" height="800px" viewBox="0 0 72.371 72.372" xml:space="preserve">
                                    <g>
                                        <path d="M22.57,2.648c-4.489,1.82-8.517,4.496-11.971,7.949C7.144,14.051,4.471,18.08,2.65,22.568C0.892,26.904,0,31.486,0,36.186   c0,4.699,0.892,9.281,2.65,13.615c1.821,4.489,4.495,8.518,7.949,11.971c3.454,3.455,7.481,6.129,11.971,7.949   c4.336,1.76,8.917,2.649,13.617,2.649c4.7,0,9.28-0.892,13.616-2.649c4.488-1.82,8.518-4.494,11.971-7.949   c3.455-3.453,6.129-7.48,7.949-11.971c1.758-4.334,2.648-8.916,2.648-13.615c0-4.7-0.891-9.282-2.648-13.618   c-1.82-4.488-4.496-8.518-7.949-11.971s-7.479-6.129-11.971-7.949C45.467,0.891,40.887,0,36.187,0   C31.487,0,26.906,0.891,22.57,2.648z M9.044,51.419c-1.743-1.094-3.349-2.354-4.771-3.838c-2.172-6.112-2.54-12.729-1.101-19.01   c0.677-1.335,1.447-2.617,2.318-3.845c0.269-0.379,0.518-0.774,0.806-1.142l8.166,4.832c0,0.064,0,0.134,0,0.205   c-0.021,4.392,0.425,8.752,1.313,13.049c0.003,0.02,0.006,0.031,0.01,0.049l-6.333,9.93C9.314,51.579,9.177,51.503,9.044,51.419z    M33.324,68.206c1.409,0.719,2.858,1.326,4.347,1.82c-6.325,0.275-12.713-1.207-18.36-4.447L33,68.018   C33.105,68.085,33.212,68.149,33.324,68.206z M33.274,65.735L17.12,62.856c-1.89-2.295-3.59-4.723-5.051-7.318   c-0.372-0.66-0.787-1.301-1.102-1.99l6.327-9.92c0.14,0.035,0.296,0.072,0.473,0.119c3.958,1.059,7.986,1.812,12.042,2.402   c0.237,0.033,0.435,0.062,0.604,0.08l7.584,13.113c-1.316,1.85-2.647,3.69-4.007,5.51C33.764,65.155,33.524,65.446,33.274,65.735z    M60.15,60.149c-1.286,1.287-2.651,2.447-4.08,3.481c-0.237-1.894-0.646-3.75-1.223-5.563l8.092-15.096   c2.229-1.015,4.379-2.166,6.375-3.593c0.261-0.185,0.478-0.392,0.646-0.618C69.374,46.561,66.104,54.196,60.15,60.149z    M59.791,40.571c0.301,0.574,0.598,1.154,0.896,1.742l-7.816,14.58c-0.045,0.01-0.088,0.02-0.133,0.026   c-4.225,0.789-8.484,1.209-12.779,1.229l-7.8-13.487c1.214-2.254,2.417-4.517,3.61-6.781c0.81-1.536,1.606-3.082,2.401-4.627   l16.143-1.658C56.29,34.495,58.163,37.457,59.791,40.571z M56.516,23.277c-0.766,2.023-1.586,4.025-2.401,6.031l-15.726,1.615   c-0.188-0.248-0.383-0.492-0.588-0.725c-1.857-2.103-3.726-4.193-5.592-6.289c0.017-0.021,0.034-0.037,0.051-0.056   c-0.753-0.752-1.508-1.504-2.261-2.258l4.378-13.181c0.302-0.08,0.606-0.147,0.913-0.18c2.38-0.242,4.763-0.516,7.149-0.654   c1.461-0.082,2.93-0.129,4.416-0.024l10.832,12.209C57.314,20.943,56.95,22.124,56.516,23.277z M60.15,12.221   c2.988,2.99,5.302,6.402,6.938,10.047c-2.024-1.393-4.188-2.539-6.463-3.473c-0.354-0.146-0.717-0.275-1.086-0.402L48.877,6.376   c0.074-0.519,0.113-1.039,0.129-1.563C53.062,6.464,56.864,8.936,60.15,12.221z M25.334,4.182c0.042,0.031,0.062,0.057,0.086,0.064   c2.437,0.842,4.654,2.082,6.744,3.553l-4.09,12.317c-0.021,0.006-0.041,0.012-0.061,0.021c-0.837,0.346-1.69,0.656-2.514,1.031   c-3.395,1.543-6.705,3.252-9.823,5.301l-8.071-4.775c0.012-0.252,0.055-0.508,0.141-0.736c0.542-1.444,1.075-2.896,1.688-4.311   c0.472-1.09,1.01-2.143,1.597-3.172c0.384-0.424,0.782-0.844,1.192-1.254c3.833-3.832,8.363-6.553,13.186-8.162   C25.384,4.098,25.358,4.139,25.334,4.182z"/>
                                    </g>
                                </svg>`;
                        break;
                    case "Substitution":
                        iconSVG = `<svg xmlns="http://www.w3.org/2000/svg" width="800px" height="800px" viewBox="0 0 20 20" version="1.1">
                                        <g id="layer1">
                                        <path d="M 4 2.5 L 3 3.5 L 3 8 L 7.5 8 L 8.5 7 L 4.6601562 7 L 5.4628906 6.0722656 L 5.7695312 5.7441406 L 6.0996094 5.4414062 L 6.4492188 5.1621094 L 6.8203125 4.9101562 L 7.2089844 4.6875 L 7.6152344 4.4941406 L 8.0332031 4.3300781 L 8.4609375 4.2011719 L 8.8984375 4.1015625 L 9.3417969 4.0351562 L 9.7890625 4.0039062 L 10.238281 4.0058594 L 10.685547 4.0390625 L 11.128906 4.1054688 L 11.564453 4.2070312 L 11.994141 4.3398438 L 12.410156 4.5058594 L 12.814453 4.7011719 L 13.201172 4.9257812 L 13.572266 5.1777344 L 13.921875 5.4589844 L 14.25 5.7636719 L 14.554688 6.09375 L 14.833984 6.4453125 L 15.083984 6.8164062 L 15.310547 7.2050781 L 15.501953 7.609375 L 15.666016 8.0273438 L 15.796875 8.4550781 L 15.896484 8.8925781 L 15.962891 9.3359375 L 15.994141 9.7851562 L 15.994141 10 L 17 10 L 17 9.9902344 L 16.982422 9.5058594 L 16.931641 9.0214844 L 16.847656 8.5449219 L 16.728516 8.0742188 L 16.580078 7.6113281 L 16.398438 7.1621094 L 16.185547 6.7265625 L 15.945312 6.3046875 L 15.675781 5.9023438 L 15.376953 5.5175781 L 15.054688 5.15625 L 14.707031 4.8183594 L 14.335938 4.5058594 L 13.945312 4.2167969 L 13.535156 3.9570312 L 13.109375 3.7285156 L 12.666016 3.5273438 L 12.210938 3.3574219 L 11.746094 3.2207031 L 11.271484 3.1152344 L 10.792969 3.0449219 L 10.306641 3.0058594 L 9.8222656 3 L 9.3378906 3.0292969 L 8.8574219 3.0917969 L 8.3808594 3.1894531 L 7.9140625 3.3183594 L 7.4550781 3.4785156 L 7.0097656 3.6699219 L 6.578125 3.8925781 L 6.1640625 4.1445312 L 5.7675781 4.4238281 L 5.390625 4.7304688 L 5.0371094 5.0605469 L 4.7070312 5.4179688 L 4 6.234375 L 4 2.5 z M 3 10 L 3 10.007812 L 3.0175781 10.492188 L 3.0683594 10.976562 L 3.1523438 11.453125 L 3.2714844 11.923828 L 3.4199219 12.386719 L 3.6015625 12.835938 L 3.8144531 13.271484 L 4.0546875 13.693359 L 4.3242188 14.095703 L 4.6230469 14.480469 L 4.9453125 14.841797 L 5.2929688 15.179688 L 5.6640625 15.492188 L 6.0546875 15.78125 L 6.4648438 16.041016 L 6.890625 16.269531 L 7.3339844 16.470703 L 7.7890625 16.640625 L 8.2539062 16.777344 L 8.7285156 16.882812 L 9.2070312 16.953125 L 9.6933594 16.992188 L 10.177734 16.998047 L 10.662109 16.96875 L 11.142578 16.90625 L 11.619141 16.808594 L 12.085938 16.679688 L 12.544922 16.519531 L 12.990234 16.328125 L 13.421875 16.105469 L 13.835938 15.853516 L 14.232422 15.574219 L 14.609375 15.267578 L 14.962891 14.9375 L 15.292969 14.580078 L 16 13.763672 L 16 17.498047 L 17 16.498047 L 17 11.998047 L 12.5 11.998047 L 11.5 12.998047 L 15.339844 12.998047 L 14.537109 13.925781 L 14.230469 14.253906 L 13.900391 14.556641 L 13.550781 14.835938 L 13.179688 15.087891 L 12.791016 15.310547 L 12.384766 15.503906 L 11.966797 15.667969 L 11.539062 15.796875 L 11.101562 15.896484 L 10.658203 15.962891 L 10.210938 15.994141 L 9.7617188 15.992188 L 9.3144531 15.958984 L 8.8710938 15.892578 L 8.4355469 15.791016 L 8.0058594 15.658203 L 7.5898438 15.492188 L 7.1855469 15.296875 L 6.7988281 15.072266 L 6.4277344 14.820312 L 6.078125 14.539062 L 5.75 14.234375 L 5.4453125 13.904297 L 5.1660156 13.552734 L 4.9160156 13.181641 L 4.6894531 12.792969 L 4.4980469 12.388672 L 4.3339844 11.970703 L 4.203125 11.542969 L 4.1035156 11.105469 L 4.0371094 10.662109 L 4.0058594 10.212891 L 4.0058594 10 L 3 10 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                        </g>
                                    </svg>`;
                        break;
                    case "MissedPenalty":
                        iconSVG = `<svg width="100%" height="200" viewBox="0 0 300 200" xmlns="http://www.w3.org/2000/svg">
                                  <rect width="100%" height="100%" fill="#555"/>
                                  <rect x="10" y="10" width="280" height="180" fill="none" stroke="white" stroke-width="8"/>
                                  <defs>
                                    <pattern id="net" width="10" height="10" patternUnits="userSpaceOnUse">
                                      <path d="M0 0 L10 0 L10 10 L0 10 Z" fill="none" stroke="#ccc" stroke-width="0.5"/>
                                    </pattern>
                                  </defs>
                                  <rect x="10" y="10" width="280" height="180" fill="url(#net)"/>
                                  <text x="150" y="125" font-size="120" text-anchor="middle" fill="red" font-family="Arial" font-weight="bold">
                                    11 м
                                  </text>
                              </svg>`;
                        break;
                    default:
                        iconSVG = `<span>${action.action.name}</span>`;
                        break;
                }

                actionsHTML += `<div class="player-action">${iconSVG} <span>${action.minutes}’</span></div>`;
            }
        }

        away_players_text = `
        <div class="player-item" onclick="open_player_statistic(${away_player.id})">
            <div class="player-main">
                <img src="${away_player.photo_url}" alt="">
                <div class="player-info">
                    <div class="player-data surname">${away_player.surname}</div>
                    <div class="player-data name">${away_player.name}</div>
                </div>
            </div>
        <div class="player-action-info">
        ${actionsHTML}
    </div>
</div>`;

        team_list_2_players.insertAdjacentHTML('beforeend', away_players_text);
    }


}

function show_statistics(data) {
    let game_home_club = data.statistics.home_club_statistic;
    let game_away_club = data.statistics.away_club_statistic;
    console.log(game_home_club);

    let home_team_logo_block = document.querySelector(".home_team_logo_block");
    home_team_logo_block.querySelector('img').src = data.game.home_club.photo_url;
    home_team_logo_block.dataset.id = data.game.home_club.id;
    let away_team_logo_block = document.querySelector(".away_team_logo_block");
    away_team_logo_block.querySelector('img').src = data.game.away_club.photo_url;
    away_team_logo_block.dataset.id = data.game.away_club.id;

    let game_statistic = document.querySelector(".game_statistic");

    const statKeyMap = {
        "Голевые моменты": "big_chance",
        "Нереализованные голевые моменты": "big_chance_missed_title",
        "Сэйвы вратаря": "keeper_saves",
        "Всего ударов": "total_shots",
        "Заблокированные удары": "blocked_shots",
        "Удары мимо": "shots_off_target",
        "Удары в штангу/перекладину": "shots_woodwork",
        "Удары в створ": "shots_on_target",
        "Удары из-за штрафной": "shots_outside_box",
        "Удары из штрафной": "shots_inside_box",
        "Угловые": "corners",
        "Офсайды": "offsides",
        "Желтые карточки": "yellow_cards",
        "Красные карточки": "red_cards",
        "Удачные обводки": "dribbles_succeeded",
        "Удачные обводки (%)": "dribbles_succeeded_persent",
        "Касания в штрафной соперника": "touches_opp_box",
        "Выигранные единоборства": "duel_won",
        "Удачные отборы": "tackles_succeeded",
        "Удачные отборы (%)": "tackles_succeeded_persent",
        "Выигранные ": "ground_duels_won",
        "Выигранные единоборства 'внизу' (%)": "ground_duels_won_persent",
        "Выигранные верховые дуэли": "aerials_won",
        "Выигранные верховые дуэли (%)": "aerials_won_persent",
        "Перехваты": "interceptions",
        "Выносы": "clearances",
        "Всего передач": "passes",
        "Точные передачи": "accurate_passes",
        "Точные передачи (%)": "accurate_passes_persent",
        "Точные длинные передачи": "long_balls_accurate",
        "Точные длинные передачи (%)": "long_balls_accurate_persent",
        "Точные кроссы": "accurate_crosses",
        "Точные кроссы (%)": "accurate_crosses_persent",
        "Передачи на чужой половине": "opposition_half_passes",
        "Передачи на своей половине": "own_half_passes",
        "Фолы": "fouls",
        "Ауты": "player_throws",

    };

    let club_text = "";


    for (let key in statKeyMap) {
        const field = statKeyMap[key];
        const homeValue = game_home_club[field] ?? "-";
        const awayValue = game_away_club[field] ?? "-";

        club_text += `<div class="stats-row">
                <div class="team-value team-1">${homeValue}</div>
                <div class="stat-name">${key}</div>
                <div class="team-value team-2">${awayValue}</div>
            </div>`;
    }

    game_statistic.insertAdjacentHTML('beforeend', club_text);
}

function open_player_statistic(player_id) {
    const game_id = document.querySelector('.game_id');
    let player_game_statistic = PLAYER_GAME_STATISTIC_MAP[player_id];

    const player = player_game_statistic.player;
    delete player_game_statistic.player;
    delete player_game_statistic.game_id;

    let player_game_statistic_block = document.querySelector('.player_game_statistic_block');
    console.log(player_game_statistic_block);
    player_game_statistic_block.querySelector('.player_photo').style.backgroundImage = `url('${player.photo_url}')`;
    player_game_statistic_block.querySelector('.player_name').innerText = `${player.surname} ${player.name}`;
    player_game_statistic_block.querySelector('.player_number').innerText = player.number;

     show_player_game_statistic(player_game_statistic)
    const player_statistic_section = document.querySelector(".player_statistic_section")
    player_statistic_section.style.display = 'flex';

}

function close_player_statistic() {
    const player_statistic_section = document.querySelector(".player_statistic_section")
    player_statistic_section.style.display = 'none';


}

function show_player_game_statistic(data) {
    let player_game_statistic_block = document.querySelector(".player_game_statistic")
    let player_game_statistic_text = `<div class="stat_header">
                                        <h4>Статистика игрока за матч</h4>
                                       </div>`;

    player_game_statistic_block.innerHTML = '';
    for (const [key, value] of Object.entries(data)) {
        player_game_statistic_text += `
        <div class="stat_row">
            <div class="stat_name">
                <p>${key}</p>
            </div>
            <div class="stat_value">
                <h4>${value}</h4>
            </div>
        </div>`;

    }
    player_game_statistic_block.insertAdjacentHTML('beforeend', player_game_statistic_text);
}

function hide_fields(finished) {
    if (finished) {
        document.querySelector('.AI_block').remove();
    }
    else {
        document.querySelector('.game_timeline').remove();
        document.querySelector('.game_statistic').remove();
    }
}

function drag_and_drop_init() {
    // Делаем весь .player-item перетаскиваемым
    document.querySelectorAll('.player-item').forEach(item => {
        item.setAttribute('draggable', true);
        item.style.cursor = 'move';

        item.addEventListener('dragstart', function (e) {
            const playerItem = this;

            // Сохраняем данные игрока
            const firstName = playerItem.querySelector('.player-data:nth-child(2)').textContent.trim();
            const lastName = playerItem.querySelector('.player-data:nth-child(1)').textContent.trim();
            const photo = playerItem.querySelector('img').src;

            const playerData = JSON.stringify({
                firstName,
                lastName,
                photo,
                id: playerItem.getAttribute('onclick').match(/\d+/)?.[0] || null
            });

            e.dataTransfer.setData('text/plain', playerData);
            e.dataTransfer.effectAllowed = 'move';

            // Можно добавить класс для визуального выделения во время drag
            playerItem.classList.add('dragging');
        });

        item.addEventListener('dragend', function (e) {
            const playerItem = this;
            playerItem.classList.remove('dragging');

            // Если не было drop — возвращаем элемент
            if (!playerItem.dataset.dropped) {
                playerItem.style.display = 'none';
            }

            delete playerItem.dataset.dropped;
        });
    });

    // Разрешаем drop на .player
    document.querySelectorAll('.player').forEach(playerCircle => {
        playerCircle.addEventListener('dragover', function (e) {
            e.preventDefault();
            e.dataTransfer.dropEffect = 'move';
        });

        playerCircle.addEventListener('drop', function (e) {
            e.preventDefault();

            const data = e.dataTransfer.getData('text/plain');
            const playerData = JSON.parse(data);

            const { firstName, lastName, photo } = playerData;

            // Проверяем, есть ли уже игрок в этом кружке
            if (this.querySelector('.player-name')?.textContent.trim()) return;

            // Устанавливаем фоновое изображение
            this.style.backgroundImage = `url('${photo}')`;
            this.style.backgroundSize = 'cover';
            this.style.backgroundPosition = 'center';

            // Заполняем имя и фамилию в .player-name
            const playerNameDiv = this.querySelector('.player-name');
            if (playerNameDiv) {
                playerNameDiv.textContent = `${lastName} ${firstName}`;
            }

            // Находим оригинальный элемент игрока и скрываем его
            const relatedPlayerItem = document.querySelector(`[onclick="open_player_statistic(${playerData.id})"]`);
            if (relatedPlayerItem) {
                relatedPlayerItem.style.display = 'none';
                relatedPlayerItem.dataset.dropped = 'true'; // чтобы не вернуть при dragend
            }
        });
    });
}

function reset_pitch() {
    // Очищаем кружки на поле
    document.querySelectorAll('.player').forEach(playerCircle => {
        playerCircle.style.backgroundImage = '';
        const playerNameDiv = playerCircle.querySelector('.player-name');
        if (playerNameDiv) {
            playerNameDiv.textContent = '';
        }
    });

    // Возвращаем все скрытые игроки
    document.querySelectorAll('.player-item').forEach(playerItem => {
        playerItem.style.visibility = 'visible';
        delete playerItem.dataset.dropped;
    });
}